@model _360LawGroup.CostOfSalesBilling.Models.UserViewModel
@{
    Model.RoleId = ViewBag.SelectedRole;
    var memberType = ViewBag.MemberType as string;
}
<div id="AddEditModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" style="min-width:85%;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">
                    @if (string.IsNullOrEmpty(Model.Id))
                    {
                        <span>Add @ViewBag.SelectedRole</span>
                    }
                    else
                    {
                        <span>Edit @ViewBag.SelectedRole</span>
                    }
                </h4>
            </div>
            @using (Ajax.BeginForm("", "", null,
            new AjaxOptions
            {
                HttpMethod = "POST",
                Url = ViewBag.ApiUrl + "api/all/users/" + (string.IsNullOrEmpty(Model.Id) ? "Create" : "Edit"),
                OnSuccess = "UserDataSuccess",
                OnFailure = "Failed"
            }, new { @class = "form-horizontal", role = "form" }
                                 ))
            {
                @Html.HiddenFor(x => x.Id)
                @Html.ValidationMessageFor(model => model.Id)
                @Html.HiddenFor(model => model.RoleId)
                @Html.ValidationMessageFor(model => model.RoleId)

                <div class="modal-body">
                    @if (@Request["selectedRole"] == RoleExtension.Admin)
                {
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.FirstName, new { @class = "control-label text-bold" })
                                <div class="row">
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control col-md-2", @placeholder = "First Name" })
                                        @Html.ValidationMessageFor(model => model.FirstName)
                                    </div>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "col-md-2 form-control", @placeholder = "Last Name" })
                                        @Html.ValidationMessageFor(model => model.LastName)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.Email, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.UserStatus, new { @class = "control-label text-bold" })
                                @Html.DropDownListFor(model => model.UserStatus,
                                                            new List<SelectListItem>
                                                            {
                                                                new SelectListItem { Text=UserStatus.Active, Value=UserStatus.Active},
                                                                new SelectListItem { Text=UserStatus.InActive, Value=UserStatus.InActive},
                                                                new SelectListItem { Text=UserStatus.PendingApproval, Value=UserStatus.PendingApproval}
                                                            }
                                                , new { @class = "form-control", @data_keyboard = "false", @data_value = Model.UserStatus })
                                @Html.ValidationMessageFor(model => model.UserStatus)
                            </div>

                        </div>
                        <div class="form-group">

                            <div class="col-md-4">
                                @Html.LabelFor(m => m.RoleId, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.RoleId, new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.RoleId)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.ConsultantUserId, new { @class = "control-label text-bold" })
                                @Html.DropDownListFor(m => m.ConsultantUserId, new SelectList(new List<string>()), new { @class = "form-control", @data_url = ViewBag.ApiUrl + "api/common/common/getallconsultant", @placeholder = "Select Consultant", @data_value = Model.ConsultantUserId })
                                @Html.ValidationMessageFor(model => model.ConsultantUserId)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.IsSendAnEmailIntro, new { @class = "control-label text-bold" })
                                @Html.DropDownListFor(model => model.IsSendAnEmailIntro,
                                                            new List<SelectListItem>
                                                            {
                                                                new SelectListItem { Text = "No", Value = "False"},
                                                                new SelectListItem { Text = "Yes", Value = "True" },
                                                            }
                                                , new { @class = "form-control", @data_keyboard = "false", @data_value = Model.IsSendAnEmailIntro })
                                @Html.ValidationMessageFor(model => model.IsSendAnEmailIntro)
                            </div>
                            @if (string.IsNullOrEmpty(Model.Id))
                            {

                            }
                        </div>
                        <div class="form-group">
                            @if (string.IsNullOrEmpty(Model.Id))
                            {
                                <div class="col-md-4">
                                    @Html.RequiredLabelFor(m => m.Password, new { @class = "control-label text-bold" })
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password)
                                </div>
                                <div class="col-md-4">
                                    @Html.RequiredLabelFor(m => m.ConfirmPassword, new { @class = "control-label text-bold" })
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                </div>
                            }
                        </div>
                    }

                    @if (@Request["selectedRole"] == RoleExtension.Consultant)
                    {
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.FirstName, new { @class = "control-label text-bold" })
                                <div class="row">
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control col-md-2", @placeholder = "First Name" })
                                        @Html.ValidationMessageFor(model => model.FirstName)
                                    </div>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "col-md-2 form-control", @placeholder = "Last Name" })
                                        @Html.ValidationMessageFor(model => model.LastName)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.Address, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder = "Enter Location" })
                                @Html.ValidationMessageFor(model => model.Address)
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.SubscriptionHourlyRate, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.SubscriptionHourlyRate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SubscriptionHourlyRate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.ConsultantCompany, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.ConsultantCompany, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ConsultantCompany)

                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.AddresslLine1, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.AddresslLine1, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AddresslLine1)

                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.MemberHourlyRate, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.MemberHourlyRate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MemberHourlyRate)

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.EmailAddress_360BusinessLaw, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.EmailAddress_360BusinessLaw, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmailAddress_360BusinessLaw)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.City, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.PrivateClientHourlyRate, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.PrivateClientHourlyRate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PrivateClientHourlyRate)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.EmailAddress_PrivateClientLaw, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.EmailAddress_PrivateClientLaw, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmailAddress_PrivateClientLaw)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.Region, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.Region, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Region)
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.LitigationHourlyRate, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.LitigationHourlyRate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LitigationHourlyRate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.EmailAddress_360LawServices, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.EmailAddress_360LawServices, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmailAddress_360LawServices)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.PinCode, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.PinCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PinCode)
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.RegulatedHourlyRate, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.RegulatedHourlyRate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RegulatedHourlyRate)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.PrivateEmailAddress, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.PrivateEmailAddress, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PrivateEmailAddress)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.Country, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.Country, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Country)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.UserStatus, new { @class = "control-label text-bold" })
                                @Html.DropDownListFor(model => model.UserStatus,
                                             new List<SelectListItem>
                                             {
                                                     new SelectListItem { Text=UserStatus.Active, Value=UserStatus.Active},
                                                     new SelectListItem { Text=UserStatus.InActive, Value=UserStatus.InActive},
                                                     new SelectListItem { Text=UserStatus.PendingApproval, Value=UserStatus.PendingApproval}
                                             }
                                             , new { @class = "form-control", @data_keyboard = "false", @data_value = Model.UserStatus }
                                             )
                                @Html.ValidationMessageFor(model => model.UserStatus)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.AreaofLaw, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.AreaofLaw, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AreaofLaw)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.BusinessPhone, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.BusinessPhone, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BusinessPhone)
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.RoleId, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.RoleId, new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.RoleId)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.JurisdictionsCovered, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.JurisdictionsCovered, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.JurisdictionsCovered)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.HomePhone, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.HomePhone, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HomePhone)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.Email, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.MobilePhone, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.MobilePhone, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MobilePhone)
                            </div>

                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.Notes, new { @class = "control-label text-bold" })
                                @Html.TextAreaFor(model => model.Notes, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Notes)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.Attachments, new { @class = "control-label text-bold" })
                                <input class="input is-file" id="field_212_upload" value="" type="file" name="files" data-url="https://eu-api.knack.com/v1/applications/5b7545f8af8d387ae632df83/assets/file/upload">
                                <div class="kn-spinner" style="display:none;"></div>
                            </div>
                        </div>
                        if (string.IsNullOrEmpty(Model.Id))
                        {
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.RequiredLabelFor(m => m.Password, new { @class = "control-label text-bold" })
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password)
                                </div>
                                <div class="col-md-4">
                                    @Html.RequiredLabelFor(m => m.ConfirmPassword, new { @class = "control-label text-bold" })
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                </div>
                            </div>
                        }

                    }
                    @if (@Request["selectedRole"] == RoleExtension.ClientUser)
                    {
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.FirstName, new { @class = "control-label text-bold" })
                                <div class="row">
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control col-md-2", @placeholder = "First Name" })
                                        @Html.ValidationMessageFor(model => model.FirstName)
                                    </div>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "col-md-2 form-control", @placeholder = "Last Name" })
                                        @Html.ValidationMessageFor(model => model.LastName)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.Email, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.UserStatus, new { @class = "control-label text-bold" })
                                @Html.DropDownListFor(model => model.UserStatus,
                                                            new List<SelectListItem>
                                                            {
                                                                new SelectListItem { Text=UserStatus.Active, Value=UserStatus.Active},
                                                                new SelectListItem { Text=UserStatus.InActive, Value=UserStatus.InActive},
                                                                new SelectListItem { Text=UserStatus.PendingApproval, Value=UserStatus.PendingApproval}
                                                            }
                                                , new { @class = "form-control", @data_keyboard = "false", @data_value = Model.UserStatus })
                                @Html.ValidationMessageFor(model => model.UserStatus)
                            </div>
                        </div>

                        <div class="form-group">

                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.ClientId, new { @class = "control-lable text-bold" })
                                @Html.DropDownListFor(m => m.ClientId, new SelectList(new List<string>()), new { @class = "form-control", @data_url = ViewBag.ApiUrl + "api/common/common/getallclient", @placeholder = "Select Client", @data_value = Model.ClientId })
                                @Html.ValidationMessageFor(model => model.ClientId)
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.RoleId, new { @class = "control-label text-bold" })
                                @Html.TextBoxFor(model => model.RoleId, new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.RoleId)
                            </div>
                            <div class="col-md-4">
                                @Html.RequiredLabelFor(m => m.IsSendAnEmailIntro, new { @class = "control-label text-bold" })
                                @Html.DropDownListFor(model => model.IsSendAnEmailIntro,
                                                            new List<SelectListItem>
                                                            {
                                                                new SelectListItem { Text = "No", Value = "False"},
                                                                new SelectListItem { Text = "Yes", Value = "True" },
                                                            }
                                                , new { @class = "form-control", @data_keyboard = "false", @data_value = Model.IsSendAnEmailIntro })
                                @Html.ValidationMessageFor(model => model.IsSendAnEmailIntro)
                            </div>
                        </div>
                        <div class="form-group">
                            @if (string.IsNullOrEmpty(Model.Id))
                            {
                                <div class="col-md-4">
                                    @Html.RequiredLabelFor(m => m.Password, new { @class = "control-label text-bold" })
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password)
                                </div>
                                <div class="col-md-4">
                                    @Html.RequiredLabelFor(m => m.ConfirmPassword, new { @class = "control-label text-bold" })
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                </div>
                            }
                        </div>
                    }
                </div>

                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-8 text-left text-indigo">
                            Note: Once @ViewBag.SelectedRole will be created, generate password link will be sent to email id for login.
                        </div>
                        <div class="col-md-4">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="submit" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        ShowModal("#AddEditModal", function () {
        });
    });

    function UserDataSuccess(data) {
        if (isSuccess(data)) {
            AlertNotify("Success!", data.Messages, "bg-success");
        }

    }
</script>
